<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{DynamicResource DisabledBorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{DynamicResource ControlBackgroundBrush}" 
                            SnapsToDevicePixels="true" CornerRadius="{DynamicResource BigCornerRadius}" MinWidth="100" MinHeight="25" ClipToBounds="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource HoverControlBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource HoverControlBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledControlBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource DisabledBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="IsCancel" Value="False"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SimpleButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{DynamicResource DisabledBorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{DynamicResource ControlBackgroundBrush}" 
                            SnapsToDevicePixels="true"
                            ClipToBounds="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource HoverControlBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource HoverControlBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledControlBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource DisabledBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Height" Value="5"/>
        <Setter Property="Margin" Value="2,0"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="LeftArrowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Path x:Name="path" 
                              Data="M18.847268,0.5 C19.098996,0.5000007 19.350726,0.57191916 19.542788,0.7157568 19.542788,0.7157568 19.542788,2.6110778 19.542788,5.335602 L19.542788,5.6901243 10.123873,12.175176 C9.7397479,12.462851 9.7397479,12.929265 10.123873,13.21694 L19.542788,19.701991 19.542788,20.056514 C19.542788,22.781038 19.542788,24.67636 19.542788,24.67636 19.158663,24.964035 18.535873,24.964035 18.151748,24.67636 L0.78809313,13.21694 C0.40396834,12.929265 0.40396834,12.462851 0.78809313,12.175175 L18.151748,0.7157568 C18.34381,0.57191916 18.595539,0.5000007 18.847268,0.5 z" 
                              Fill="{DynamicResource ControlBackgroundBrush}" 
                              HorizontalAlignment="Stretch" Margin="0" Stretch="Uniform" 
                              Stroke="{DynamicResource BorderBrush}" VerticalAlignment="Stretch"
                              Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource HoverControlBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource HoverBorderAccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="LeftArrowButtonStyle1">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HoverControlBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HoverControlBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Data="M-33,0 L-46.5,11.5 -33,23 -29,19 -38.5,11.5 -29,4.5 z" Stretch="Uniform" VerticalAlignment="Stretch" Stroke="{DynamicResource BorderBrush}" Fill="{DynamicResource ControlBackgroundBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource LeftArrowButtonStyle}" x:Key="RightArrowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Path x:Name="path" 
                              Data="M1.1843393,0.5 C1.4320213,0.5 1.6797033,0.57076263 1.8686785,0.7122879 L18.953202,11.987492 C19.331153,12.270542 19.331153,12.729458 18.953202,13.01251 L1.8686785,24.287711 C1.6797038,24.429237 1.4320215,24.499999 1.1843393,24.5 0.93665785,24.499999 0.68897456,24.429237 0.50000012,24.287711 0.5,24.287711 0.5,22.422859 0.50000012,19.742133 L0.50000012,19.39331 9.7675011,13.012509 C10.145451,12.729458 10.145451,12.270542 9.7675011,11.987492 L0.50000012,5.6066914 0.50000012,5.2578678 C0.5,2.5771418 0.5,0.7122879 0.50000012,0.7122879 0.68897498,0.57076263 0.93665707,0.5 1.1843393,0.5 z" 
                              Fill="{DynamicResource ControlBackgroundBrush}" 
                              HorizontalAlignment="Stretch" Margin="0" Stretch="Uniform" 
                              Stroke="{DynamicResource BorderBrush}" VerticalAlignment="Stretch"
                              Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource HoverControlBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource HoverBorderAccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>