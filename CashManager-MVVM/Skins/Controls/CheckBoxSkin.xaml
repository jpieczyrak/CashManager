<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" x:Name="checkBoxBorder" BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="2" Background="Transparent"
                    CornerRadius="{DynamicResource SmallCornerRadius}"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid x:Name="markGrid">
                    <Path x:Name="optionMark"
                          Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
                          Fill="#FF212121" Margin="1" Opacity="0" Stretch="None" />
                    <Rectangle x:Name="indeterminateMark" Fill="{DynamicResource BorderBrush}" Margin="2" Opacity="0" />
                </Grid>
            </Border>
            <TextBlock x:Name="textBlock"
                       Foreground="{TemplateBinding Foreground}"
                       Background="{TemplateBinding Background}"
                       Margin="{TemplateBinding Padding}"
                       Grid.Column="1"
                       Text="{TemplateBinding Content}" VerticalAlignment="Center" />
            <!--<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <!-- ReSharper disable Xaml.RedundantPropertyTypeQualifier -->
                            <Setter Property="Control.Template">
                                <!-- ReSharper restore Xaml.RedundantPropertyTypeQualifier -->
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="optionMark" Value="Transparent"/>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource HoverControlBackgroundBrush}"/>
                <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource HoverBorderAccentBrush}"/>
                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource DisabledBorderBrush}"/>
                <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent"/>
                <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource HoverBorderAccentBrush}"/>
                <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource HoverBorderAccentBrush}"/>
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource HoverBorderAccentBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource ForegroundBrush}"/>
                <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource ForegroundBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource HoverBorderAccentBrush}"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource HoverBorderAccentBrush}"/>
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource HoverBorderAccentBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="{x:Null}"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource HoverBorderAccentBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource ForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Template" Value="{DynamicResource CheckBoxControlTemplate}"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}" x:Key="GrayCheckBox">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
        <Setter Property="Padding" Value="5,1,5,0"/>
        <Setter Property="MinWidth" Value="90"/>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
        <Setter Property="Template" Value="{DynamicResource CheckBoxControlTemplate}"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}" x:Key="OnlyCheckBox">
        <Setter Property="Margin" Value="5,2,2,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
        <Setter Property="Template" Value="{DynamicResource CheckBoxControlTemplate}"/>
    </Style>
</ResourceDictionary>